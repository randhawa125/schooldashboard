@page
@model ayush.add_quizModel
@{
    ViewData["Title"] = "add_quiz";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h1>Add New Quiz</h1>
                </div>
                <div class="card-body">
                    <form role="form" id="operationForm" method="post">
                        <div class="form-group">
                            <label for="Title">Quiz Name</label>
                            <input class="form-control" type="text" id="Name" name="Name" value="@Model.QuizViewModel.Name" placeholder="Enter quiz name">
							
                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Name"] != null && ViewData.ModelState["Name"].Errors.Count > 0)
                            {
                                @Html.ValidationMessageFor(m => m.QuizViewModel.Name, ViewData.ModelState["Name"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
                            }
                        </div>
                        <div class="form-group">
                            <label for="Description">Description</label>
                            <textarea class="form-control" name="Description" placeholder="Enter some Description about this quiz" rows="4">@Model.QuizViewModel.Description</textarea>
                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Description"] != null && ViewData.ModelState["Description"].Errors.Count > 0)
                            {
                                @Html.ValidationMessageFor(m => m.QuizViewModel.Description, ViewData.ModelState["Description"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
                            }
                        </div>
                        <div class="form-group">
                            <label for="Description">Should this Quiz be taken in a timely manner?</label>
                            <div class="form-control checkbox form-check-inline">
                                @{
                                    var quizTimerChecked = Model.QuizViewModel.EnableQuizTimer ? "checked" : string.Empty;
                                }
                                <input type="checkbox" class="mx-2" id="QuizTimerCheckbox" @quizTimerChecked> Yes, Enable Quiz Timer
                                <input type="hidden" name="EnableQuizTimer" id="EnableQuizTimer" />
                            </div>
                        </div>
                        <div id="timerSection">
                            <div class="form-group">
                                <label for="Hours">Hours</label>
                                <input class="form-control" type="text" id="Hours" name="Hours" value="@Model.QuizViewModel.Hours" placeholder="Enter Hours Duration">
                                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Hours"] != null && ViewData.ModelState["Hours"].Errors.Count > 0)
                                {
                                    @Html.ValidationMessageFor(m => m.QuizViewModel.Hours, ViewData.ModelState["Hours"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
                                }
                            </div>
                            <div class="form-group">
                                <label for="Minutes">Minutes</label>
                                <input class="form-control" type="text" id="Minutes" name="Minutes" value="@Model.QuizViewModel.Minutes" placeholder="Enter Minutes Duration">
                                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Minutes"] != null && ViewData.ModelState["Minutes"].Errors.Count > 0)
                                {
                                    @Html.ValidationMessageFor(m => m.QuizViewModel.Minutes, ViewData.ModelState["Minutes"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
                                }
                            </div>
                            <div class="form-group">
                                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["TimeDuration"] != null && ViewData.ModelState["TimeDuration"].Errors.Count > 0)
                                {
                                    @Html.ValidationMessageFor(m => m.QuizViewModel.TimeDuration, ViewData.ModelState["TimeDuration"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
                                }
                            </div>
                            <div class="form-group">
                                <label for="Description">Do you want to enable each Question Timer?</label>
                                <div class="form-control checkbox form-check-inline">
                                    @{
                                        var questionTimerChecked = Model.QuizViewModel.EnableQuestionTimer ? "checked" : string.Empty;
                                    }
                                    <input type="checkbox" class="mx-2" id="EnableQuestionTimer" name="EnableQuestionTimer" value="true" @questionTimerChecked> Yes, Enable Question Timer
                                </div>
                            </div>
                        </div>
                        <hr />
                        <button type="submit" id="addButton" class="btn btn-success waves-effect waves-light w-md"><i class="fas fa-save mg-r-10"></i>&nbsp;Save Quiz and Start Adding Questions</button>
                        <a href="quizzes" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel and Go Back</a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
	$(document).ready(function () {
		CheckForTimerSection();

		$("#QuizTimerCheckbox").change(function () {
			CheckForTimerSection();
		});
	});

	function CheckForTimerSection() {
		if ($('#QuizTimerCheckbox').is(":checked")) {
			$('#EnableQuizTimer').val("true");
			$("#timerSection").show();
		}
		else {
			$('#EnableQuizTimer').val("false");
			$("#timerSection").hide();
		}
	}
</script>