@page
@model ayush.edit_image_questionModel
@{
	ViewData["Title"] = "edit_image_question";
	Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}


<div class="container-fluid">
	<div class="row">
		<div class="col-sm-12">
			<div class="card">
				<div class="card-header">
					<h1>Edit Image Question</h1>
				</div>
				<div class="card-body">
					<div>

						<form role="form" id="operationForm" method="post">
							<input type="hidden" id="ID" name="ID" value="@Model.EditQuestionViewModel.ID" />
							<input type="hidden" id="QuizID" name="QuizID" value="@Model.EditQuestionViewModel.QuizID" />

							<div class="form-group">
								<label for="Title">Question Title</label>
								@*<input class="form-control" type="text" id="Title" name="Title" value="@Model.EditQuestionViewModel.Title" placeholder="Enter question title">*@
								<textarea class="textarea" placeholder="Place some text here" name="Title" id="Title"
										  style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;">
							@Model.EditQuestionViewModel.Title</textarea>
								@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Title"] != null && ViewData.ModelState["Title"].Errors.Count > 0)
								{
									@Html.ValidationMessageFor(m => m.EditQuestionViewModel.Title, ViewData.ModelState["Title"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
								}

								<div class="image-holder pull-left">
									<input class="txtfield form-control" type="hidden" name="questionfile" value="@Model.EditQuestionViewModel.ImageId">
									@if (string.IsNullOrEmpty(Model.EditQuestionViewModel.ImagePath))
									{
										<img src="" class="img-thumbnail" style="height: 300px; display:none">
									}
									else
									{
										<img src="/uploads/@Model.EditQuestionViewModel.ImagePath" class="img-thumbnail" style="height: 300px;">
									}

								</div>
								<span class="error-holder"></span>
								<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
								<div class="clearfix"></div>
							</div>

							@*<div>
								<label><span name="optionNoText">Correct Options</span></label>
							</div>

							@if (Model.EditQuestionViewModel.CorrectOptions != null && Model.EditQuestionViewModel.CorrectOptions.Count > 0)
							{
								foreach (var correctOption in Model.EditQuestionViewModel.CorrectOptions)
								{
									if (correctOption.Image != null)
									{
										<div class="option form-group">
											<div class="image-holder pull-left">
												<input class="txtfield form-control" type="hidden" name="correctOption@(Model.EditQuestionViewModel.CorrectOptions.IndexOf(correctOption) + 1)" value="@correctOption.Image.Id">
												<img src="/uploads/@correctOption.Image.Name" class="img-thumbnail" style="height: 300px;">
											</div>
											<div class="delete-holder pull-left p-20">
												<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
											</div>
											<span class="error-holder"></span>
											<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
											<div class="clearfix"></div>
										</div>
									}
									else
									{
										<div class="option form-group">
											<div class="image-holder pull-left">
												<input class="txtfield form-control" type="hidden" name="correctOption@(Model.EditQuestionViewModel.CorrectOptions.IndexOf(correctOption) + 1)" value="">
												<img src="" class="img-thumbnail" style="height: 300px;">
											</div>
											<div class="delete-holder pull-left p-20">
												<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
											</div>
											<span class="error-holder"></span>
											<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
											<div class="clearfix"></div>
										</div>
									}
								}
							}
							else
							{
								<div class="option form-group">
									<div class="image-holder pull-left">
										<input class="txtfield form-control" type="hidden" name="correctOption1" value="">
										<img src="" class="img-thumbnail" style="height: 300px; display:none">
									</div>
									<div class="delete-holder pull-left p-20" style="display: none;">
										<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
									</div>
									<span class="error-holder"></span>
									<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
									<div class="clearfix"></div>
								</div>
							}

							<span id="correctOptions"></span>*@

							@if (!ViewData.ModelState.IsValid && ViewData.ModelState["CorrectOptions"] != null && ViewData.ModelState["CorrectOptions"].Errors.Count > 0)
							{
								@Html.ValidationMessageFor(m => m.EditQuestionViewModel.CorrectOptions, ViewData.ModelState["CorrectOptions"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
							}

							<div>
								<label><span name="optionNoText">Options</span></label>
							</div>

							@if (Model.EditQuestionViewModel.Options != null && Model.EditQuestionViewModel.Options.Count > 0)
							{
								foreach (var option in Model.EditQuestionViewModel.Options)
								{
						<div class="option form-group row">
							<div class="col-6">
								<div class="image-holder pull-left">
									<input class="txtfield" type="hidden" name="option@(Model.EditQuestionViewModel.Options.IndexOf(option) + 1)" value="@option.Image.Id">
									<img src="/uploads/@option.Image.Name" class="img-thumbnail" style="height: 300px;">
								</div>
								<div class="delete-holder pull-left p-20">
									<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
								</div>
								<span class="error-holder"></span>
								<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
								<div class="clearfix"></div>
							</div>
							<label class="text-right col-3">Is Option Correct?</label>
							@if (option.IsCorrect)
							{
								<input class="form-control col-1" type="checkbox" name="isoptioncorrect@(Model.EditQuestionViewModel.Options.IndexOf(option) + 1)" checked="checked">
							}
							else
							{
								<input class="form-control col-1" type="checkbox" name="isoptioncorrect@(Model.EditQuestionViewModel.Options.IndexOf(option) + 1)">
							}
						</div>
								}
							}
							else
							{
						<div class="option form-group row">
							<div class="col-6">
								<div class="image-holder pull-left">
									<img src="" class="txtfield img-thumbnail" style="height: 300px; display:none">
									<input class="txtfield form-control" type="hidden" name="option1" value="">
								</div>
								<div class="delete-holder pull-left p-20" style="display: none;">
									<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
								</div>
								<span class="error-holder"></span>
								<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
								<div class="clearfix"></div>
							</div>
							<label class="text-right col-3">Is Option Correct?</label>
							<input class="form-control col-1" type="checkbox" name="isoptioncorrect1">
						</div>
							}

							<span id="options"></span>

							@if (!ViewData.ModelState.IsValid && ViewData.ModelState["Options"] != null && ViewData.ModelState["Options"].Errors.Count > 0)
							{
								@Html.ValidationMessageFor(m => m.EditQuestionViewModel.Options, ViewData.ModelState["Options"].Errors.FirstOrDefault().ErrorMessage, new { @class = "text-danger" })
							}

							<div id="actionsRow">
								<hr />
								@*<button type="button" id="addCorrectOptionButton" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-plus mg-r-10"></i>&nbsp;Add Correct Option</button>*@
								<button type="button" id="addOptionButton" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-plus mg-r-10"></i>&nbsp;Add Option</button>
								<button type="submit" id="updateButton" class="btn btn-warning"><i class="fas fa-save mg-r-10"></i>&nbsp;Update this Question and Go Back</button>
								<button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete this Question</button>
								<a href="question?quizid=@Model.EditQuestionViewModel.QuizID" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel and Go Back</a>
							</div>
						</form>


						@*<div class="correctOptionRowTemplateImage" style="display:none">
							<div class="image-holder pull-left">
								<input class="txtfield form-control" type="hidden" name="correctOptionNo">
								<img src="" class="img-thumbnail" style="height: 300px; display: none;">
							</div>
							<div class="delete-holder pull-left p-20" style="display: none;">
								<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
							</div>
							<span class="error-holder"></span>
							<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
							<div class="clearfix"></div>
						</div>*@

					<div class="optionRowTemplateImage" style="display:none">
						<div class="col-6">
							<div class="image-holder pull-left">
								<input class="txtfield form-control" type="hidden" name="optionNo">
								<img src="" class="img-thumbnail" style="height: 300px; display: none;">
							</div>
							<div class="delete-holder pull-left p-20" style="display: none;">
								<button type="button" class="delete-image btn btn-danger waves-effect waves-light w-md"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
							</div>
							<span class="error-holder"></span>
							<input class="image-uploader form-control" type="file" accept=".png,.jpg,.jpeg,.gif,.tif" />
							<div class="clearfix"></div>
						</div>
						<label class="text-right col-3">Is Option Correct?</label>
						<input class="form-control col-1" type="checkbox" name="isoptioncorrect">
					</div>

						<div id="errorDiv" style="display:none">
							<div class="m-t-10 alert alert-icon alert-danger alert-dismissible" role="alert">
								<button type="button" class="close" data-dismiss="alert" aria-label="Close">
									<span aria-hidden="true">×</span>
								</button>
								<i class="mdi mdi-alert"></i>
								<span class="error-message">
								</span>
							</div>
						</div>



					</div>

				</div>
			</div>
		</div>
	</div>
</div>

<div id="deleteModal" class="modal fade">
	<div class="modal-dialog" role="document">
		<div class="modal-content tx-size-sm">
			<div class="modal-body tx-center pd-y-20 pd-x-20">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
				<i class="icon icon ion-android-warning tx-100 tx-warning lh-1 mg-t-20 d-inline-block"></i>
				<h4 class="tx-warning tx-semibold mg-b-20">Warning!</h4>
				<p class="mg-b-20 mg-x-20">Are you sure you want to delete this record? This will not be reversible.</p>
				<button type="button" id="deleteButton" class="btn btn-danger mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
				<button type="button" class="btn btn-primary mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel</button>
			</div>
		</div>
	</div>
</div>

@section JavaScript
{
	<script>
	$(document).ready(function () {

        // Summernote
			$('.textarea').summernote({
				height: 300
			});
		//$("#addCorrectOptionButton").click(function () {
		//	AddCorrectOption();
		//});

		$("#addOptionButton").click(function () {
			AddOption();
		});

        ImageUploadsListen();
        ImageDeleterListen();


		$("#updateButton").click(function () {
			$("#operationForm").attr("action", "edit_image_question?quizId=@Model.EditQuestionViewModel.QuizID&questionId=@Model.EditQuestionViewModel.ID");
			$("#operationForm").submit();
		});
		$("#deleteButton").click(function () {
			$("#operationForm").attr("action", "edit_image_question?handler=DeleteQuestion");
			$("#operationForm").submit();
		});
	});

    function ImageUploadsListen() {
        $(".image-uploader").off('change', ImageUploader).on('change', ImageUploader);
    }

    function ImageDeleterListen() {
        $(".delete-image").off('click', ImageDeleter).on('click', ImageDeleter);
    }

    function ImageDeleter() {
        $(this).parents('.option').remove();
    }

	function ImageUploader() {

        var element = this;

        $(element).prevAll('.image-holder').first().children('.txtfield').val("");
        $(element).prevAll('.image-holder').first().children('.img-thumbnail').hide();
        $(element).prevAll('.image-holder').first().children('.img-thumbnail').attr('src', '');
        $(element).prevAll('.error-holder').first().html("");
        $(element).prevAll('.delete-holder').first().hide();

		var formData = new FormData();
		var totalFiles = element.files.length;
		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}

		$.ajax({
			type: "POST",
			url: '/api/home/uploadimage',
			data: formData,
			dataType: 'json',
			contentType: false,
			processData: false
        }).done(function (data) {
			if (data.success) {

                $(element).prevAll('.image-holder').first().children('.txtfield').val(data.file);
                $(element).prevAll('.image-holder').first().children('.img-thumbnail').attr('src', data.imageURL);
                $(element).prevAll('.image-holder').first().children('.img-thumbnail').show();

                $(element).prevAll('.delete-holder').first().show();
			}
            else {
                console.log(data.Message);

                var $error = $('#errorDiv').clone();
                $error.find('.error-message').html(data.Message);
                $error.removeAttr("id");
                $(element).prevAll('.error-holder').first().append($error);
                $error.slideDown();
			}
		}).fail(function (xhr, status, errorThrown) {
            console.log(errorThrown);

            var $error = $('#errorDiv').clone();
            $error.find('.error-message').html(errorThrown);
            $error.removeAttr("id");
            $(element).prevAll('.error-holder').first().append($error);
            $error.slideDown();
		});
	}

	//function AddCorrectOption() {
	//	$('<div/>', {
	//			'class': 'option form-group', html: GetImageCorrectOptionHtml()
	//    }).hide().insertBefore('#correctOptions').slideDown('slow');

 //       ImageUploadsListen();
 //       ImageDeleterListen();
	//}

	function AddOption() {
		$('<div/>', {
				'class': 'option form-group row', html: GetImageOptionHtml()
		}).hide().insertBefore('#options').slideDown('slow');

        ImageUploadsListen();
        ImageDeleterListen();
	}

 //   function GetImageCorrectOptionHtml() {
	//	var len = $('.option').length + 1;
	//	var $html = $('.correctOptionRowTemplateImage').clone();
	//	$html.find('[name=correctOptionNo]')[0].name = "correctOptionNo" + len;
	//	return $html.html();
	//}

	function GetImageOptionHtml() {
		var len = $('.option').length + 1;
		var $html = $('.optionRowTemplateImage').clone();
		$html.find('[name=optionNo]')[0].name = "optionNo" + len;
		$html.find('[name=isoptioncorrect]')[0].name = "isoptioncorrect" + len;
		return $html.html();
	}

	</script>
}