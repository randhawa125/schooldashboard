// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ayush.Data;

namespace ayush.Migrations
{
    [DbContext(typeof(ayushContext))]
    partial class ayushContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ayush.Models.AttemptedOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttemptedQuestionID")
                        .HasColumnType("int");

                    b.Property<int>("OptionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttemptedQuestionID");

                    b.HasIndex("OptionID");

                    b.ToTable("AttemptedOptions");
                });

            modelBuilder.Entity("ayush.Models.AttemptedQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AnsweredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StudentQuizID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionID");

                    b.HasIndex("StudentQuizID");

                    b.ToTable("AttemptedQuestions");
                });

            modelBuilder.Entity("ayush.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SubmittedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SubmittedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SubmittedByUserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("ayush.Models.Career", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AptitudeFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AptitudeStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EQFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EQStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivatorFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MotivatorStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalityFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PersonalityStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StenAptitudeFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenEQFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenInterestFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenMotivatorFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenPersonalityFactors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("ayush.Models.CaseStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UploadedByStudent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CaseStudy");
                });

            modelBuilder.Entity("ayush.Models.FeedbackFormModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DifficultyLevelFine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModulesConcernWith")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverallExperience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasEasyToUnderstand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasEngaging")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WereInstructionsClear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhichModulesDifficult")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("ayush.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ayush.Models.InterestModuleQuestion6UserCareer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CareerDataId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterestModuleQuestion6UserCareers");
                });

            modelBuilder.Entity("ayush.Models.InterestModuleQuestion7UserCareer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CareerDataId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterestModuleQuestion7UserCareers");
                });

            modelBuilder.Entity("ayush.Models.InterestModuleQuestion8UserCareer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CareerDataId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterestModuleQuestion8UserCareers");
                });

            modelBuilder.Entity("ayush.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ayush.Models.OneTimePassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsKeyUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OneTimePasswords");
                });

            modelBuilder.Entity("ayush.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageID");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ayush.Models.PassiveCareer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AptitudeFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AptitudeStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AptitudeStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CareerListType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("EQFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EQStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EQStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivatorFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MotivatorStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MotivatorStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalityFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PersonalityStenConstant1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PersonalityStenConstant4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StenAptitudeFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenEQFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenInterestFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenMotivatorFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StenPersonalityFactors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PassiveCareers");
                });

            modelBuilder.Entity("ayush.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("ayush.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasOptionsDuration")
                        .HasColumnType("bit");

                    b.Property<int?>("ImageID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("OptionsTimeDuration")
                        .HasColumnType("time");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeDuration")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageID");

                    b.HasIndex("QuizID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ayush.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableQuestionTimer")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableQuizTimer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeDuration")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("ayush.Models.RewardsRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegisteredUserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RewardDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RewardPoints")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RewardsRegister");
                });

            modelBuilder.Entity("ayush.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<int>("StudentSlotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.HasIndex("SlotId")
                        .IsUnique();

                    b.HasIndex("StudentSlotId")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ayush.Models.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BaseUserId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleFiveMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ConflictManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Empathy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Extrinsic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenConflictManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenEmpathy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenIntrinsicMotivation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenRelationshipManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSelfAwareness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSelfExpression")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSelfRegulation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Intrinsic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IntrinsicMotivation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OverallValues")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RelationshipManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SelfAwareness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SelfExpression")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SelfRegulation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentModuleFiveMarks");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleFourMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AbstractReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttentionToDetail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CriticalThinking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenAbstractReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenAttentionToDetail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenCriticalThinking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenMechanicalReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenPerceptualReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenQuantitativeReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSpatialReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenVerbalReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MechanicalReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PerceptualReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantitativeReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpatialReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VerbalReasoning")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StudentModuleFourMarks");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleOneMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Actor_or_Art_Director")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Actuarial_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Administrative_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Airlines_Pilot_or_Commercial_Pilot")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Architect")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Artificial_Intelligence_or_Machine_Learning_Expert")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Artistic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Biologist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Blogger")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CA_or_CS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Chef")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Choreographer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Civil_Engineer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conventional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Copywriter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Customer_Care_Executive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Data_Scientist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Defence_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dentist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Detective")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dietician_or_Nutritionist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Digital_Marketing_Affiliate_Marketing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Disaster_Management_Expert")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Economist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Electric_And_Electronics_Engineer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Enterprising")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Entrepreneur")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Environmentalist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Event_Manager")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Farming_Expert_or_Agricultural_Scientist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fashion_Designer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Financial_Analyst_Investment_Banker_Finanicial_Advisor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fitness_Trainer_or_sports_Coach")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Forensic_Scientist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gamer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Graphic_Designer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hospitality_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Human_Resources_Manager")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interior_Designer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Investigative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Journalist_or_News_Reporter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Lawyer_Judge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Linguistics_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Logistics_And_Operations_Manager")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mechanical_Engineer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Medical_Professional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Multimedia_Artist_or_Animator_or_Creative_Director")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Music_Director_or_Music_Compose_or_Musician")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Network_Engineer_or_Cyber_Security_Expert")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Outbound_Trainer_or_Corporate_Trainer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Painter_or_Illustrator")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Paramedical_Services")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Photographer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Police_Officer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Product_Designer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Psychologist_or_Counsellor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Public_Relations_Officer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Realistic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sales_And_Marketing_Professional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Scientist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Security_Officer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Social")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Social_Worker")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Software_Developer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Space_Scientist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stock_Trader")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Teaching_Professional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Travel_Consultant_Travel_Advisor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Wellness_Expert")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Writer_or_Editor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StudentModuleOneMarks");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleThreeMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AchievementOriented")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActionOriented")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Confidence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cooperative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Curiosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Deliberation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dependable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Emotional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnergyLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EntrepreneurialMindset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExperientialMindset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Extrovert")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenAchievementOriented")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenActionOriented")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenConfidence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenCooperative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenCuriosity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenDeliberation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenEnergyLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenFriendliness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenInternalLocusOfControl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenOptimism")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenOriginalityOfIdeas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenPerseverance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenProactive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenResponsible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenRiskTaking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSociable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSocialAstuteness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenStraightForward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenStressTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenTrusting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Friendliness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InternalLocusOfControl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Opportunistic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Optimism")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OriginalityOfIdeas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Perseverance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Proactive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Responsible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RiskTaking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sociable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SocialAstuteness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StraightForward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StressTolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Trusting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentModuleThreeMarks");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleTwoMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CreativityAndInnovation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenCreativityAndInnovation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenFunLoving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenGoalSetting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenKnowledgeSeeking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenMoneyAndProfits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenNetworking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenPower")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenRecognition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenRespect")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSecurity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalStenSocialService")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FunLoving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GoalSetting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KnowledgeSeeking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyAndProfits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Networking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Power")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Recognition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Respect")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Security")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SocialService")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentModuleTwoMarks");
                });

            modelBuilder.Entity("ayush.Models.StudentQuiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QuizID");

                    b.HasIndex("UserId");

                    b.ToTable("StudentQuizzes");
                });

            modelBuilder.Entity("ayush.Models.StudentSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentSlots");
                });

            modelBuilder.Entity("ayush.Models.SystemInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PropertyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SystemInformation");
                });

            modelBuilder.Entity("ayush.Models.UserInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("BestVacation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathOne1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathOne2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathOne3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathOne4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathOne5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathThree1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathThree2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathThree3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathThree4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathThree5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathTwo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathTwo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathTwo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathTwo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerPathTwo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CodeSentOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DifferentlyAbled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DreamCareer1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DreamCareer2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderorYounger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectationsFromUpclass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FatherProfession")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FatherQualification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FavoriteSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirstCareerId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstPassiveCareerId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Grades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowManyFriends")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowYourFriendsDescribeYou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowYourParentsDecribeYou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvitedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPlanPurchased")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IscodeUsed")
                        .HasColumnType("bit");

                    b.Property<string>("LastTest")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MotherProfession")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MotherQualification")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanPurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionOfResponsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SecondCareerId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondPassiveCareerId")
                        .HasColumnType("int");

                    b.Property<string>("Siblings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThirdCareerId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdPassiveCareerId")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatMotivatesYou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhyThisCareer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirstCareerId");

                    b.HasIndex("PlanId");

                    b.HasIndex("SecondCareerId");

                    b.HasIndex("ThirdCareerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("ayush.Models.UserSibling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSibling");
                });

            modelBuilder.Entity("ayush.Models.AddAdmin", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AddAdmin");
                });

            modelBuilder.Entity("ayush.Models.BaseUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("BaseUser");
                });

            modelBuilder.Entity("ayush.Models.admin.AddCounsellor", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasColumnName("AddCounsellor_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnName("AddCounsellor_Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnName("AddCounsellor_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnName("AddCounsellor_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AddCounsellor");
                });

            modelBuilder.Entity("ayush.Models.admin.AddSchool", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasColumnName("AddSchool_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnName("AddSchool_Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnName("AddSchool_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnName("AddSchool_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AddSchool");
                });

            modelBuilder.Entity("ayush.Models.admin.AddStudent", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnName("AddStudent_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnName("AddStudent_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AddStudent");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ayush.Models.AttemptedOption", b =>
                {
                    b.HasOne("ayush.Models.AttemptedQuestion", "AttemptedQuestion")
                        .WithMany("SelectedOptions")
                        .HasForeignKey("AttemptedQuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ayush.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ayush.Models.AttemptedQuestion", b =>
                {
                    b.HasOne("ayush.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ayush.Models.StudentQuiz", "StudentQuiz")
                        .WithMany("AttemptedQuestions")
                        .HasForeignKey("StudentQuizID");
                });

            modelBuilder.Entity("ayush.Models.Blog", b =>
                {
                    b.HasOne("ayush.Models.BaseUser", "SubmittedByUser")
                        .WithMany()
                        .HasForeignKey("SubmittedByUserId");
                });

            modelBuilder.Entity("ayush.Models.Notification", b =>
                {
                    b.HasOne("ayush.Models.BaseUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");
                });

            modelBuilder.Entity("ayush.Models.Option", b =>
                {
                    b.HasOne("ayush.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID");

                    b.HasOne("ayush.Models.Question", null)
                        .WithMany("Options")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("ayush.Models.Question", b =>
                {
                    b.HasOne("ayush.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID");

                    b.HasOne("ayush.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ayush.Models.Session", b =>
                {
                    b.HasOne("ayush.Models.BaseUser", null)
                        .WithMany("Sessions")
                        .HasForeignKey("BaseUserId");

                    b.HasOne("ayush.Models.Slot", "Slot")
                        .WithOne("Session")
                        .HasForeignKey("ayush.Models.Session", "SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ayush.Models.StudentSlot", "StudentSlot")
                        .WithOne("Session")
                        .HasForeignKey("ayush.Models.Session", "StudentSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ayush.Models.Slot", b =>
                {
                    b.HasOne("ayush.Models.BaseUser", "BaseUser")
                        .WithMany()
                        .HasForeignKey("BaseUserId");
                });

            modelBuilder.Entity("ayush.Models.StudentModuleOneMarks", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ayush.Models.StudentQuiz", b =>
                {
                    b.HasOne("ayush.Models.Quiz", "Quiz")
                        .WithMany("StudentQuizzes")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ayush.Models.UserInformation", b =>
                {
                    b.HasOne("ayush.Models.Career", "FirstCareer")
                        .WithMany()
                        .HasForeignKey("FirstCareerId");

                    b.HasOne("ayush.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId");

                    b.HasOne("ayush.Models.Career", "SecondCareer")
                        .WithMany()
                        .HasForeignKey("SecondCareerId");

                    b.HasOne("ayush.Models.Career", "ThirdCareer")
                        .WithMany()
                        .HasForeignKey("ThirdCareerId");

                    b.HasOne("ayush.Models.BaseUser", "IdentityUser")
                        .WithMany("UserInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ayush.Models.UserSibling", b =>
                {
                    b.HasOne("ayush.Models.BaseUser", "IdentityUser")
                        .WithMany("Siblings")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
