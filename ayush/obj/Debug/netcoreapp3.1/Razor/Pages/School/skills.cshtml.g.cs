#pragma checksum "D:\mmmmm\ayush\Pages\School\skills.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5893ab318fd6b6a94772d33e1a80773a394e5481"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(ayush.Pages.School.Pages_School_skills), @"mvc.1.0.razor-page", @"/Pages/School/skills.cshtml")]
namespace ayush.Pages.School
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\mmmmm\ayush\Pages\_ViewImports.cshtml"
using ayush;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5893ab318fd6b6a94772d33e1a80773a394e5481", @"/Pages/School/skills.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"30a319bf93157485e6034cff29d85f12084656cc", @"/Pages/_ViewImports.cshtml")]
    public class Pages_School_skills : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-app border border-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\mmmmm\ayush\Pages\School\skills.cshtml"
  
    ViewData["Title"] = "Skills";
    Layout = "~/Pages/Shared/_SchoolLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5893ab318fd6b6a94772d33e1a80773a394e54814210", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral(@"

<section class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h5 class=""text-uppercase"">Skills</h5>
            </div>
            <div class=""col-sm-6"">
                <ol class=""breadcrumb float-sm-right"">

                    <li>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5893ab318fd6b6a94772d33e1a80773a394e54815656", async() => {
                WriteLiteral("\r\n                            <i class=\"fas fa-database\"></i>Table\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </li>

                </ol>
            </div>
        </div>
    </div>
</section>

<section class=""content"">
    <div class=""container-fluid"">
        <div class=""row"">


            <div class=""col-md-12"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">My School</h3>
                    </div>

                    <div class=""card-body"">
                        <div class=""row"">
                            <div class=""col-md-6"" style=""min-height:250px;"">
                                <canvas id=""myChart""></canvas>
                            </div>
                            <div class=""col-md-6"">
                                <h5 class=""text-uppercase ml-4"">Implication</h5>
                              
                                <ul>
                                    <li><b>Critical Thinking: </b>workshop description will be written here.. only few line of descr");
            WriteLiteral(@"iption..</li>
                                    <li><b>Creativity and Innovation: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Collaboration / Teamwork: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Communication / Storytelling: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Flexibility / Adaptability / Agility: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Leadership: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Initiative / Entrepreneurial / Self Directed: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Productivity / Time");
            WriteLiteral(@" Management: </b>workshop description will be written here.. only few line of description..</li>

                                    <li><b>Social / Networking Skills: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Negotiation: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Learnability: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Decision-Making: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Ethics / Social Responsibility: </b>workshop description will be written here.. only few line of description..</li>
                                    <li><b>Resilience: </b>workshop description will be written here.. only few line of description..</li>
                                    <li>");
            WriteLiteral(@"<b>Problem Solving/Jugaad: </b>workshop description will be written here.. only few line of description..</li>
                                   
                                </ul>
                            </div>

                        </div>
                    </div>

                </div>

            </div>


            <div class=""col-md-12"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">My Class</h3>
                    </div>
                    <div class=""row p-3"">
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Critical Thinking</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Critical""></canvas>
 ");
            WriteLiteral(@"                               </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Creativity and Innovation</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Creativity""></canvas>
                                </div>
                            </div>
                        </div>

                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Collaboration / Teamwork</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
 ");
            WriteLiteral(@"                                   <canvas id=""Graph_Collaboration""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Communication / Storytelling</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Communication""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Flexibility / Adaptability / Agility</h3>
                        ");
            WriteLiteral(@"        </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Flexibility""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Leadership</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Leadership""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-t");
            WriteLiteral(@"itle"">Initiative / Entrepreneurial / Self Directed</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Initiative""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Productivity / Time Management</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Productivity""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
          ");
            WriteLiteral(@"                      <div class=""card-header"">
                                    <h3 class=""card-title"">Social / Networking Skills</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Social""></canvas>
                                </div>
                            </div>
                        </div>

                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Negotiation</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Negotiation""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4");
            WriteLiteral(@""">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Learnability</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Learnability""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Decision-Making</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Decision""></canvas>
                                </div>
                            </div>
                       ");
            WriteLiteral(@" </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Ethics / Social Responsibility</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Ethics""></canvas>
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Resilience</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Resilience""></canvas>
                                </div");
            WriteLiteral(@">
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""card"">
                                <div class=""card-header"">
                                    <h3 class=""card-title"">Problem Solving/Jugaad</h3>
                                </div>
                                <div class=""card-body"" style=""height:300px;"">
                                    <canvas id=""Graph_Problem""></canvas>
                                </div>
                            </div>
                        </div>




                    </div>

                </div>

            </div>

        </div>

    </div>

</section>


");
            DefineSection("JavaScript", async() => {
                WriteLiteral("\r\n\r\n");
                WriteLiteral(@"   
    <script>
        var graph_six = document.getElementById(""myChart"").getContext(""2d"");

        var graph_six_Data = {
            labels: [


                ""Critical Thinking"",
                ""Creativity and Innovation"",
                ""Collaboration / Teamwork"",
                ""Communication / Storytelling"",
                ""Flexibility / Adaptability / Agility"",
                ""Leadership"",
                ""Initiative / Entrepreneurial / Self Directed"",
                ""Productivity / Time Management"",

                ""Social / Networking Skills"",
                ""Negotiation"",
                ""Learnability"",
                ""Decision-Making"",
                ""Ethics / Social Responsibility"",
                ""Resilience"",
                ""Problem Solving/Jugaad""
                 



                ],
                datasets: [
                {
                    label: ""Result"",
                        data: [5, 3, 7, 8, 9, 2, 5, 6, 5, 3, 7, 8, 9, 2, 5],
 ");
                WriteLiteral(@"                       backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#947aa3"", ""#88a4c2"", ""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#947aa3""],
                        hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        };

        var graph_three_Chart = new Chart(graph_six, {
            type: 'horizontalBar',
            data: graph_six_Data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                scales: {

                    xAxes: [{

                        ticks: {
                            min: 0,
                            max: 10,
                            diplay: false
                        },
             ");
                WriteLiteral(@"           gridLines: {
                            display: false
                        }

                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            max: 10,
                            diplay: false
                        },
                        stacked: true,
                        gridLines: {
                            display: false
                        }
                    }]
                }
            }
        });
    </script>
   
<script>
   

    Chart.pluginService.register({
        afterDraw: function (chart) {
            if (typeof chart.config.options.lineAt != 'undefined') {
                var lineAt = chart.config.options.lineAt;
                var ctxPlugin = chart.chart.ctx;
                var xAxe = chart.scales[chart.config.options.scales.xAxes[0].id];
                var yAxe = chart.scales[chart.config.options.scales.yAxes[0].id];

           ");
                WriteLiteral(@"     // I'm not good at maths
                // So I couldn't find a way to make it work ...
                // ... without having the `min` property set to 0
                if (yAxe.min != 0) return;

                ctxPlugin.setLineDash([5, 10]);

                ctxPlugin.strokeStyle = ""silver"";
                ctxPlugin.beginPath();
                lineAt = (lineAt - yAxe.min) * (100 / yAxe.max);
                lineAt = (100 - lineAt) / 100 * (yAxe.height) + yAxe.top;
                ctxPlugin.moveTo(xAxe.left, lineAt);
                ctxPlugin.lineTo(xAxe.right, lineAt);
                ctxPlugin.stroke();
            }
        }
    });


");
                WriteLiteral(@"    var ctx = document.getElementById(""Graph_Critical"");
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [""8th"",""9th"",""10th"",""11th"",""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 8],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 8,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: false
     ");
                WriteLiteral(@"               }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx2 = document.getElementById(""Graph_Creativity"");
    var myChart2 = new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 8],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 5,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: fal");
                WriteLiteral(@"se
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });
");
                WriteLiteral(@"    var ctx3 = document.getElementById(""Graph_Collaboration"");
    var myChart3 = new Chart(ctx3, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display:");
                WriteLiteral(@" false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });




");
                WriteLiteral(@"    var ctx4 = document.getElementById(""Graph_Communication"");
    var myChart4 = new Chart(ctx4, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display:");
                WriteLiteral(@" false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });

");
                WriteLiteral(@"    var ctx5 = document.getElementById(""Graph_Flexibility"");
    var myChart5 = new Chart(ctx5, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: f");
                WriteLiteral(@"alse
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });

");
                WriteLiteral(@"    var ctx6 = document.getElementById(""Graph_Leadership"");
    var myChart6 = new Chart(ctx6, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: fa");
                WriteLiteral(@"lse
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });

");
                WriteLiteral(@"    var ctx7 = document.getElementById(""Graph_Initiative"");
    var myChart7 = new Chart(ctx7, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: fa");
                WriteLiteral(@"lse
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });

");
                WriteLiteral(@"    var ctx8 = document.getElementById(""Graph_Productivity"");
    var myChart8 = new Chart(ctx8, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: ");
                WriteLiteral(@"false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx9 = document.getElementById(""Graph_Social"");
    var myChart9 = new Chart(ctx9, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: false");
                WriteLiteral(@"
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx10 = document.getElementById(""Graph_Negotiation"");
    var myChart10 = new Chart(ctx10, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display");
                WriteLiteral(@": false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });



");
                WriteLiteral(@"    var ctx11 = document.getElementById(""Graph_Learnability"");
    var myChart11 = new Chart(ctx11, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        displa");
                WriteLiteral(@"y: false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx12 = document.getElementById(""Graph_Decision"");
    var myChart12 = new Chart(ctx12, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: f");
                WriteLiteral(@"alse
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx13 = document.getElementById(""Graph_Ethics"");
    var myChart13 = new Chart(ctx13, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: fal");
                WriteLiteral(@"se
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx14 = document.getElementById(""Graph_Resilience"");
    var myChart14 = new Chart(ctx14, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display:");
                WriteLiteral(@" false
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });


");
                WriteLiteral(@"    var ctx15 = document.getElementById(""Graph_Problem"");
    var myChart15 = new Chart(ctx15, {
        type: 'bar',
        data: {
            labels: [""8th"", ""9th"", ""10th"", ""11th"", ""12th""],
            datasets: [
                {
                    label: ""Result"",
                    data: [1, 2, 3, 4, 10],
                    backgroundColor: [""#947aa3"", ""#88a4c2"", ""#a9bf9b"", ""#e09fd6"", ""#e65f1c""],
                    hoverBackgroundColor: [""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB"", ""#66A2EB""]
                }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false
            },

            lineAt: 6,
            scales: {

                xAxes: [{

                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    gridLines: {
                        display: fa");
                WriteLiteral(@"lse
                    }

                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 10,
                        diplay: false
                    },
                    stacked: true,
                    gridLines: {
                        display: false
                    }
                }]
            }
        }
    });
</script>




   
   
   


");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ayush.skillsmodel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ayush.skillsmodel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ayush.skillsmodel>)PageContext?.ViewData;
        public ayush.skillsmodel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
